{"version":3,"file":"static/js/97.4efa0057.chunk.js","mappings":"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","sources":["../node_modules/solar-calc/index.js","../node_modules/solar-calc/lib/moon.js","../node_modules/solar-calc/lib/solarCalc.js","../node_modules/solar-calc/lib/sun.js"],"sourcesContent":["'use strict';\n\nmodule.exports = require('./lib/solarCalc.js');\n","\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar Moon = (function () {\n  function Moon(date, latitude, longitude) {\n    _classCallCheck(this, Moon);\n\n    this.date = date;\n    this.latitude = latitude;\n    this.longitude = longitude;\n\n    this.julianDate = getJD(date);\n  }\n\n  _createClass(Moon, {\n    illuminosity: {\n      get: function () {\n        return moonPhase(this.date) / 360;\n      }\n    },\n    distance: {\n      get: function () {\n        return moonPos(this.date).distance;\n      }\n    }\n  });\n\n  return Moon;\n})();\n\n// Utility functions for astronomical programming.\n// JavaScript by Peter Hayes http://www.peter-hayes.freeserve.co.uk/\n// Copyright 2001-2002\n// This code is made freely available but please keep this notice.\n// I accept no liability for any errors in my coding but please\n// let me know of any errors you find. My address is on my home page.\n\nfunction getJD(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n\n  var A = Math.floor(year / 100);\n  var B = 2 - A + Math.floor(A / 4);\n  var JD = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + B - 1524.5;\n  return JD;\n}\n\n// function dayno(year, month, day, hours) {\n//   // Day number is a modified Julian date, day 0 is 2000 January 0.0\n//   // which corresponds to a Julian date of 2451543.5\n//   var A = Math.floor(year / 100);\n//   var B = 2 - A + Math.floor(A / 4);\n//   var JD = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + B - 1524.5 + hours;\n//   return JD;\n// }\n\n// function julian(year, month, day, hours) {\n//   return dayno(year, month, day, hours) + 2451543.5;\n// }\n\n// function jdtocd(jd) {\n//   // The calendar date from julian date\n//   // Returns year, month, day, day of week, hours, minutes, seconds\n//   var Z = Math.floor(jd + 0.5);\n//   var F = jd + 0.5 - Z;\n//   if (Z < 2299161) {\n//     var A = Z;\n//   } else {\n//     var alpha = Math.floor((Z - 1867216.25) / 36524.25);\n//     var A = Z + 1 + alpha - Math.floor(alpha / 4);\n//   }\n//   var B = A + 1524;\n//   var C = Math.floor((B - 122.1) / 365.25);\n//   var D = Math.floor(365.25 * C);\n//   var E = Math.floor((B - D) / 30.6001);\n//   var d = B - D - Math.floor(30.6001 * E) + F;\n//   if (E < 14) {\n//     var month = E - 1;\n//   } else {\n//     var month = E - 13;\n//   }\n//   if (month > 2) {\n//     var year = C - 4716;\n//   } else {\n//     var year = C - 4715;\n//   }\n//   var day = Math.floor(d);\n//   var h = (d - day) * 24;\n//   var hours = Math.floor(h);\n//   var m = (h - hours) * 60;\n//   var minutes = Math.floor(m);\n//   var seconds = Math.round((m - minutes) * 60);\n//   if (seconds >= 60) {\n//     minutes = minutes + 1;\n//     seconds = seconds - 60;\n//   }\n//   if (minutes >= 60) {\n//     hours = hours + 1;\n//     minutes = 0;\n//   }\n//   var dw = Math.floor(jd + 1.5) - 7 * Math.floor((jd + 1.5) / 7);\n//   return [year, month, day, dw, hours, minutes, seconds];\n// }\n\n// function local_sidereal(year, month, day, hours, lon) {\n//   // Compute local siderial time in degrees\n//   // year, month, day and hours are the Greenwich date and time\n//   // lon is the observers longitude\n//   var d = dayno(year, month, day, hours);\n//   var lst = (98.9818 + 0.985647352 * d + hours * 15 + lon);\n//   return rev(lst) / 15;\n// }\n\n// function radtoaa(ra, dec, year, month, day, hours, lat, lon) {\n//   // convert ra and dec to altitude and azimuth\n//   // year, month, day and hours are the Greenwich date and time\n//   // lat and lon are the observers latitude and longitude\n//   var lst = local_sidereal(year, month, day, hours, lon);\n//   var x = cosd(15.0 * (lst - ra)) * cosd(dec);\n//   var y = sind(15.0 * (lst - ra)) * cosd(dec);\n//   var z = sind(dec);\n//   // rotate so z is the local zenith\n//   var xhor = x * sind(lat) - z * cosd(lat);\n//   var yhor = y;\n//   var zhor = x * cosd(lat) + z * sind(lat);\n//   var azimuth = rev(atan2d(yhor, xhor) + 180.0); // so 0 degrees is north\n//   var altitude = atan2d(zhor, Math.sqrt(xhor * xhor + yhor * yhor));\n//   return [altitude, azimuth];\n// }\n\n// Extensions to the Math routines - Trig routines in degrees\n// JavaScript by Peter Hayes http://www.peter-hayes.freeserve.co.uk/\n// Copyright 2001-2002\n\nfunction rev(angle) {\n  return angle - Math.floor(angle / 360) * 360;\n}\n\nfunction sind(angle) {\n  return Math.sin(angle * Math.PI / 180);\n}\n\nfunction cosd(angle) {\n  return Math.cos(angle * Math.PI / 180);\n}\n\nfunction tand(angle) {\n  return Math.tan(angle * Math.PI / 180);\n}\n\nfunction asind(c) {\n  return 180 / Math.PI * Math.asin(c);\n}\n\n// function acosd(c) {\n//   return (180.0 / Math.PI) * Math.acos(c);\n// }\n\nfunction atan2d(y, x) {\n  return 180 / Math.PI * Math.atan(y / x) - 180 * (x < 0);\n}\n\n// function anglestring(a, circle) {\n//   // returns a in degrees as a string degrees:minutes\n//   // circle is true for range between 0 and 360 and false for -90 to +90\n//   var ar = Math.round(a * 60) / 60;\n//   var deg = Math.abs(ar);\n//   var min = Math.round(60.0 * (deg - Math.floor(deg)));\n//   if (min >= 60) {\n//     deg += 1;\n//     min = 0;\n//   }\n//   var anglestr = \"\";\n//   if (!circle) anglestr += (ar < 0 ? \"-\" : \"+\");\n//   if (circle) anglestr += ((Math.floor(deg) < 100) ? \"0\" : \"\");\n//   anglestr += ((Math.floor(deg) < 10) ? \"0\" : \"\") + Math.floor(deg);\n//   anglestr += ((min < 10) ? \":0\" : \":\") + (min);\n//   return anglestr;\n// }\n\n// JavaScript by Peter Hayes http://www.aphayes.pwp.blueyonder.co.uk/\n// Copyright 2001-2010\n// Unless otherwise stated this code is based on the methods in\n// Astronomical Algorithms, first edition, by Jean Meeus\n// Published by Willmann-Bell, Inc.\n// This code is made freely available but please keep this notice.\n// The calculations are approximate but should be good enough for general use,\n// I accept no responsibility for errors in astronomy or coding.\n\n// WARNING moonrise code changed on 6 May 2003 to correct a systematic error\n// these are now local times NOT UTC as the original code did.\n\n// Meeus first edition table 45.A Longitude and distance of the moon\n\nvar T45AD = [0, 2, 2, 0, 0, 0, 2, 2, 2, 2, 0, 1, 0, 2, 0, 0, 4, 0, 4, 2, 2, 1, 1, 2, 2, 4, 2, 0, 2, 2, 1, 2, 0, 0, 2, 2, 2, 4, 0, 3, 2, 4, 0, 2, 2, 2, 4, 0, 4, 1, 2, 0, 1, 3, 4, 2, 0, 1, 2, 2];\n\nvar T45AM = [0, 0, 0, 0, 1, 0, 0, -1, 0, -1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, -1, 0, 0, 0, 1, 0, -1, 0, -2, 1, 2, -2, 0, 0, -1, 0, 0, 1, -1, 2, 2, 1, -1, 0, 0, -1, 0, 1, 0, 1, 0, 0, -1, 2, 1, 0, 0];\n\nvar T45AMP = [1, -1, 0, 2, 0, 0, -2, -1, 1, 0, -1, 0, 1, 0, 1, 1, -1, 3, -2, -1, 0, -1, 0, 1, 2, 0, -3, -2, -1, -2, 1, 0, 2, 0, -1, 1, 0, -1, 2, -1, 1, -2, -1, -1, -2, 0, 1, 4, 0, -2, 0, 2, 1, -2, -3, 2, 1, -1, 3, -1];\n\nvar T45AF = [0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, -2, 2, -2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, -2, 2, 0, 2, 0, 0, 0, 0, 0, 0, -2, 0, 0, 0, 0, -2, -2, 0, 0, 0, 0, 0, 0, 0, -2];\n\nvar T45AL = [6288774, 1274027, 658314, 213618, -185116, -114332, 58793, 57066, 53322, 45758, -40923, -34720, -30383, 15327, -12528, 10980, 10675, 10034, 8548, -7888, -6766, -5163, 4987, 4036, 3994, 3861, 3665, -2689, -2602, 2390, -2348, 2236, -2120, -2069, 2048, -1773, -1595, 1215, -1110, -892, -810, 759, -713, -700, 691, 596, 549, 537, 520, -487, -399, -381, 351, -340, 330, 327, -323, 299, 294, 0];\n\nvar T45AR = [-20905355, -3699111, -2955968, -569925, 48888, -3149, 246158, -152138, -170733, -204586, -129620, 108743, 104755, 10321, 0, 79661, -34782, -23210, -21636, 24208, 30824, -8379, -16675, -12831, -10445, -11650, 14403, -7003, 0, 10056, 6322, -9884, 5751, 0, -4950, 4130, 0, -3958, 0, 3258, 2616, -1897, -2117, 2354, 0, 0, -1423, -1117, -1571, -1739, 0, -4421, 0, 0, 0, 0, 1165, 0, 0, 8752];\n\n// Meeus table 45B latitude of the moon\n\nvar T45BD = [0, 0, 0, 2, 2, 2, 2, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 4, 4, 0, 4, 2, 2, 2, 2, 0, 2, 2, 2, 2, 4, 2, 2, 0, 2, 1, 1, 0, 2, 1, 2, 0, 4, 4, 1, 4, 1, 4, 2];\n\nvar T45BM = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 1, -1, -1, -1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 1, 0, -1, -2, 0, 1, 1, 1, 1, 1, 0, -1, 1, 0, -1, 0, 0, 0, -1, -2];\n\nvar T45BMP = [0, 1, 1, 0, -1, -1, 0, 2, 1, 2, 0, -2, 1, 0, -1, 0, -1, -1, -1, 0, 0, -1, 0, 1, 1, 0, 0, 3, 0, -1, 1, -2, 0, 2, 1, -2, 3, 2, -3, -1, 0, 0, 1, 0, 1, 1, 0, 0, -2, -1, 1, -2, 2, -2, -1, 1, 1, -1, 0, 0];\n\nvar T45BF = [1, 1, -1, -1, 1, -1, 1, 1, -1, -1, -1, -1, 1, -1, 1, 1, -1, -1, -1, 1, 3, 1, 1, 1, -1, -1, -1, 1, -1, 1, -3, 1, -3, -1, -1, 1, -1, 1, -1, 1, 1, 1, 1, -1, 3, -1, -1, 1, -1, -1, 1, -1, 1, -1, -1, -1, -1, -1, -1, 1];\n\nvar T45BL = [5128122, 280602, 277693, 173237, 55413, 46271, 32573, 17198, 9266, 8822, 8216, 4324, 4200, -3359, 2463, 2211, 2065, -1870, 1828, -1794, -1749, -1565, -1491, -1475, -1410, -1344, -1335, 1107, 1021, 833, 777, 671, 607, 596, 491, -451, 439, 422, 421, -366, -351, 331, 315, 302, -283, -229, 223, 223, -220, -220, -185, 181, -177, 176, 166, -164, 132, -119, 115, 107];\n\n// MoonPos calculates the Moon position, based on Meeus chapter 45\n\nfunction moonPos(date) {\n  // julian date\n  var jd = getJD(date) + 2451543.5;\n  var T = (jd - 2451545) / 36525;\n  var T2 = T * T;\n  var T3 = T2 * T;\n  var T4 = T3 * T;\n  // Moons mean longitude L'\n  var LP = 218.3164477 + 481267.88123421 * T - 0.0015786 * T2 + T3 / 538841 - T4 / 65194000;\n  // Moons mean elongation\n  var D = 297.8501921 + 445267.1114034 * T - 0.0018819 * T2 + T3 / 545868 - T4 / 113065000;\n  // Suns mean anomaly\n  var M = 357.5291092 + 35999.0502909 * T - 0.0001536 * T2 + T3 / 24490000;\n  // Moons mean anomaly M'\n  var MP = 134.9633964 + 477198.8675055 * T + 0.0087414 * T2 + T3 / 69699 - T4 / 14712000;\n  // Moons argument of latitude\n  var F = 93.272095 + 483202.0175233 * T - 0.0036539 * T2 - T3 / 3526000 + T4 / 863310000;\n\n  // Additional arguments\n  var A1 = 119.75 + 131.849 * T;\n  var A2 = 53.09 + 479264.29 * T;\n  var A3 = 313.45 + 481266.484 * T;\n  var E = 1 - 0.002516 * T - 0.0000074 * T2;\n  var E2 = E * E;\n  // Sums of periodic terms from table 45.A and 45.B\n  var Sl = 0;\n  var Sr = 0;\n  for (var i = 0; i < 60; i++) {\n    var Eterm = 1;\n    if (Math.abs(T45AM[i]) === 1) Eterm = E;\n    if (Math.abs(T45AM[i]) === 2) Eterm = E2;\n    Sl += T45AL[i] * Eterm * sind(rev(T45AD[i] * D + T45AM[i] * M + T45AMP[i] * MP + T45AF[i] * F));\n    Sr += T45AR[i] * Eterm * cosd(rev(T45AD[i] * D + T45AM[i] * M + T45AMP[i] * MP + T45AF[i] * F));\n  }\n  var Sb = 0;\n  for (var i = 0; i < 60; i++) {\n    var Eterm = 1;\n    if (Math.abs(T45BM[i]) === 1) Eterm = E;\n    if (Math.abs(T45BM[i]) === 2) Eterm = E2;\n    Sb += T45BL[i] * Eterm * sind(rev(T45BD[i] * D + T45BM[i] * M + T45BMP[i] * MP + T45BF[i] * F));\n  }\n  // Additional additive terms\n  Sl = Sl + 3958 * sind(rev(A1)) + 1962 * sind(rev(LP - F)) + 318 * sind(rev(A2));\n  Sb = Sb - 2235 * sind(rev(LP)) + 382 * sind(rev(A3)) + 175 * sind(rev(A1 - F)) + 175 * sind(rev(A1 + F)) + 127 * sind(rev(LP - MP)) - 115 * sind(rev(LP + MP));\n  // geocentric longitude, latitude and distance\n  var mglong = rev(LP + Sl / 1000000);\n  var mglat = rev(Sb / 1000000);\n  if (mglat > 180) mglat = mglat - 360;\n  var mr = Math.round(385000.56 + Sr / 1000);\n  // Obliquity of Ecliptic\n  var obl = 23.4393 - 3.563e-9 * (jd - 2451543.5);\n  // RA and dec\n  var ra = rev(atan2d(sind(mglong) * cosd(obl) - tand(mglat) * sind(obl), cosd(mglong))) / 15;\n  var dec = rev(asind(sind(mglat) * cosd(obl) + cosd(mglat) * sind(obl) * sind(mglong)));\n  if (dec > 180) dec = dec - 360;\n  return {\n    ra: ra,\n    dec: dec,\n    distance: mr\n  };\n}\n\n// function MoonRise(year, month, day, TZ, latitude, longitude) {\n//   // returns an array containing rise and set times or one of the\n//   // following codes.\n//   // -1 rise or set event not found and moon was down at 00:00\n//   // -2 rise or set event not found and moon was up   at 00:00\n//   // WARNING code changes on 6/7 May 2003 these are now local times\n//   // NOT UTC and rise/set not found codes changed.\n//   var hours = 0;\n//   var riseset = [];\n//   // elh is the elevation at the hour elhdone is true if elh calculated\n//   var elh = [];\n//   var elhdone = [];\n//   for (var i = 0; i <= 24; i++) {\n//     elhdone[i] = false;\n//   }\n//   // Compute the moon elevation at start and end of day\n//   // store elevation at the hours in an array elh to save search time\n//   var rad = MoonPos(year, month, day, hours - TZ);\n//   var altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//   elh[0] = altaz[0];\n//   elhdone[0] = true;\n//   // set the return code to allow for always up or never rises\n//   if (elh[0] > 0.0) {\n//     riseset = [-2, -2];\n//   } else {\n//     riseset = [-1, -1];\n//   }\n//   hours = 24;\n//   rad = MoonPos(year, month, day, hours - TZ);\n//   altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//   elh[24] = altaz[0];\n//   elhdone[24] = true;\n//   // search for moonrise and set\n//   for (var rise = 0; rise < 2; rise++) {\n//     var found = false;\n//     var hfirst = 0;\n//     var hlast = 24;\n//     // Try a binary chop on the hours to speed the search\n//     while (Math.ceil((hlast - hfirst) / 2) > 1) {\n//       hmid = hfirst + Math.round((hlast - hfirst) / 2);\n//       if (!elhdone[hmid]) {\n//         hours = hmid;\n//         rad = MoonPos(year, month, day, hours - TZ);\n//         altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//         elh[hmid] = altaz[0];\n//         elhdone[hmid] = true;\n//       }\n//       if (((rise === 0) && (elh[hfirst] <= 0.0) && (elh[hmid] >= 0.0)) ||\n//         ((rise === 1) && (elh[hfirst] >= 0.0) && (elh[hmid] <= 0.0))) {\n//         hlast = hmid;\n//         found = true;\n//         continue;\n//       }\n//       if (((rise === 0) && (elh[hmid] <= 0.0) && (elh[hlast] >= 0.0)) ||\n//         ((rise === 1) && (elh[hmid] >= 0.0) && (elh[hlast] <= 0.0))) {\n//         hfirst = hmid;\n//         found = true;\n//         continue;\n//       }\n//       break;\n//     }\n//     // If the binary chop did not find a 1 hour interval\n//     if ((hlast - hfirst) > 1) {\n//       for (var i = hfirst; i < hlast; i++) {\n//         found = false;\n//         if (!elhdone[i + 1]) {\n//           hours = i + 1;\n//           rad = MoonPos(year, month, day, hours - TZ);\n//           altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//           elh[hours] = altaz[0];\n//           elhdone[hours] = true;\n//         }\n//         if (((rise === 0) && (elh[i] <= 0.0) && (elh[i + 1] >= 0.0)) ||\n//           ((rise === 1) && (elh[i] >= 0.0) && (elh[i + 1] <= 0.0))) {\n//           hfirst = i;\n//           hlast = i + 1;\n//           found = true;\n//           break;\n//         }\n//       }\n//     }\n//     // simple linear interpolation for the minutes\n//     if (found) {\n//       var elfirst = elh[hfirst];\n//       var ellast = elh[hlast];\n//       hours = hfirst + 0.5;\n//       rad = MoonPos(year, month, day, hours - TZ);\n//       altaz = radtoaa(rad[0], rad[1], year, month, day, hours - TZ, latitude, longitude);\n//       // alert(\"day =\"+day+\" hour =\"+hours+\" altaz=\"+altaz[0]+\" \"+altaz[1]);\n//       if ((rise == 0) && (altaz[0] <= 0.0)) {\n//         hfirst = hours;\n//         elfirst = altaz[0];\n//       }\n//       if ((rise == 0) && (altaz[0] > 0.0)) {\n//         hlast = hours;\n//         ellast = altaz[0];\n//       }\n//       if ((rise == 1) && (altaz[0] <= 0.0)) {\n//         hlast = hours;\n//         ellast = altaz[0];\n//       }\n//       if ((rise === 1) && (altaz[0] > 0.0)) {\n//         hfirst = hours;\n//         elfirst = altaz[0];\n//       }\n//       var eld = Math.abs(elfirst) + Math.abs(ellast);\n//       riseset[rise] = hfirst + (hlast - hfirst) * Math.abs(elfirst) / eld;\n//     }\n//   } // End of rise/set loop\n//   return (riseset);\n// }\n\nfunction moonPhase(date) {\n  // the illuminated percentage from Meeus chapter 46\n  var j = getJD(date) + 2451543.5;\n  var T = (j - 2451545) / 36525;\n  var T2 = T * T;\n  var T3 = T2 * T;\n  var T4 = T3 * T;\n  // Moons mean elongation Meeus first edition\n  // var D=297.8502042+445267.1115168*T-0.0016300*T2+T3/545868.0-T4/113065000.0;\n  // Moons mean elongation Meeus second edition\n  var D = 297.8501921 + 445267.1114034 * T - 0.0018819 * T2 + T3 / 545868 - T4 / 113065000;\n  // Moons mean anomaly M' Meeus first edition\n  // var MP=134.9634114+477198.8676313*T+0.0089970*T2+T3/69699.0-T4/14712000.0;\n  // Moons mean anomaly M' Meeus second edition\n  var MP = 134.9633964 + 477198.8675055 * T + 0.0087414 * T2 + T3 / 69699 - T4 / 14712000;\n  // Suns mean anomaly\n  var M = 357.5291092 + 35999.0502909 * T - 0.0001536 * T2 + T3 / 24490000;\n  // phase angle\n  var pa = 180 - D - 6.289 * sind(MP) + 2.1 * sind(M) - 1.274 * sind(2 * D - MP) - 0.658 * sind(2 * D) - 0.214 * sind(2 * MP) - 0.11 * sind(D);\n  return rev(pa);\n}\n\n// function MoonQuarters(year, month, day) {\n//   // returns an array of Julian Ephemeris Days (JDE) for\n//   // new moon, first quarter, full moon and last quarter\n//   // Meeus first edition chapter 47 with only the most larger additional corrections\n//   // Meeus code calculate Terrestrial Dynamic Time\n//   // TDT = UTC + (number of leap seconds) + 32.184\n//   // At the end of June 2012 the 25th leap second was added\n//   //\n//   var quarters = [];\n//   // k is an integer for new moon incremented by 0.25 for first quarter 0.5 for new etc.\n//   var k = Math.floor((year + ((month - 1) + day / 30) / 12 - 2000) * 12.3685);\n//   // Time in Julian centuries since 2000.0\n//   var T = k / 1236.85;\n//   // Sun's mean anomaly\n//   var M = rev(2.5534 + 29.10535669 * k - 0.0000218 * T * T);\n//   // Moon's mean anomaly (M' in Meeus)\n//   var MP = rev(201.5643 + 385.81693528 * k + 0.0107438 * T * T + 0.00001239 * T * T * T - 0.00000011 * T * T * T);\n//   var E = 1 - 0.002516 * T - 0.0000074 * T * T;\n//   // Moons argument of latitude\n//   var F = rev(160.7108 + 390.67050274 * k - 0.0016341 * T * T - 0.00000227 * T * T * T + 0.000000011 * T * T * T * T);\n//   // Longitude of ascending node of lunar orbit\n//   var Omega = rev(124.7746 - 1.56375580 * k + 0.0020691 * T * T + 0.00000215 * T * T * T);\n//   // The full planetary arguments include 14 terms, only used the 7 most significant\n//   var A = [];\n//   A[1] = rev(299.77 + 0.107408 * k - 0.009173 * T * T);\n//   A[2] = rev(251.88 + 0.016321 * k);\n//   A[3] = rev(251.83 + 26.651886 * k);\n//   A[4] = rev(349.42 + 36.412478 * k);\n//   A[5] = rev(84.88 + 18.206239 * k);\n//   A[6] = rev(141.74 + 53.303771 * k);\n//   A[7] = rev(207.14 + 2.453732 * k);\n\n//   // New moon\n//   var JDE0 = 2451550.09765 + 29.530588853 * k + 0.0001337 * T * T - 0.000000150 * T * T * T + 0.00000000073 * T * T * T * T;\n//   // Correct for TDT since 1 July 2012\n//   JDE0 = JDE0 - 57.184 / (24 * 60 * 60);\n//   var JDE = JDE0 - 0.40720 * sind(MP) + 0.17241 * E * sind(M) + 0.01608 * sind(2 * MP) + 0.01039 * sind(2 * F) + 0.00739 * E * sind(MP - M) - 0.00514 * E * sind(MP + M) + 0.00208 * E * E * sind(2 * M) - 0.00111 * sind(MP - 2 * F) - 0.00057 * sind(MP + 2 * F) + 0.00056 * E * sind(2 * MP + M) - 0.00042 * sind(3 * MP) + 0.00042 * E * sind(M + 2 * F) + 0.00038 * E * sind(M - 2 * F) - 0.00024 * E * sind(2 * MP - M) - 0.00017 * sind(Omega) - 0.00007 * sind(MP + 2 * M);\n\n//   quarters[0] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   // The following code needs tidying up with a loop and conditionals for each quarter\n//   // First Quarter k=k+0.25\n//   JDE = JDE0 + 29.530588853 * 0.25;\n//   M = rev(M + 29.10535669 * 0.25);\n//   MP = rev(MP + 385.81693528 * 0.25);\n//   F = rev(F + 390.67050274 * 0.25);\n//   Omega = rev(Omega - 1.56375580 * 0.25);\n//   A[1] = rev(A[1] + 0.107408 * 0.25);\n//   A[2] = rev(A[2] + 0.016321 * 0.25);\n//   A[3] = rev(A[3] + 26.651886 * 0.25);\n//   A[4] = rev(A[4] + 36.412478 * 0.25);\n//   A[5] = rev(A[5] + 18.206239 * 0.25);\n//   A[6] = rev(A[6] + 53.303771 * 0.25);\n//   A[7] = rev(A[7] + 2.453732 * 0.25);\n\n//   JDE = JDE - 0.62801 * sind(MP) + 0.17172 * E * sind(M) - 0.01183 * E * sind(MP + M) + 0.00862 * sind(2 * MP) + 0.00804 * sind(2 * F) + 0.00454 * E * sind(MP - M) + 0.00204 * E * E * sind(2 * M) - 0.00180 * sind(MP - 2 * F) - 0.00070 * sind(MP + 2 * F) - 0.00040 * sind(3 * MP) - 0.00034 * E * sind(2 * MP - M) + 0.00032 * E * sind(M + 2 * F) + 0.00032 * E * sind(M - 2 * F) - 0.00028 * E * E * sind(MP + 2 * M) + 0.00027 * E * sind(2 * MP + M) - 0.00017 * sind(Omega);\n//   // Next term is w add for first quarter & subtract for second\n//   JDE = JDE + (0.00306 - 0.00038 * E * cosd(M) + 0.00026 * cosd(MP) - 0.00002 * cosd(MP - M) + 0.00002 * cosd(MP + M) + 0.00002 * cosd(2 * F));\n\n//   quarters[1] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   // Full moon k=k+0.5\n//   JDE = JDE0 + 29.530588853 * 0.5;\n//   // Already added 0.25 for first quarter\n//   M = rev(M + 29.10535669 * 0.25);\n//   MP = rev(MP + 385.81693528 * 0.25);\n//   F = rev(F + 390.67050274 * 0.25);\n//   Omega = rev(Omega - 1.56375580 * 0.25);\n//   A[1] = rev(A[1] + 0.107408 * 0.25);\n//   A[2] = rev(A[2] + 0.016321 * 0.25);\n//   A[3] = rev(A[3] + 26.651886 * 0.25);\n//   A[4] = rev(A[4] + 36.412478 * 0.25);\n//   A[5] = rev(A[5] + 18.206239 * 0.25);\n//   A[6] = rev(A[6] + 53.303771 * 0.25);\n//   A[7] = rev(A[7] + 2.453732 * 0.25);\n\n//   JDE = JDE - 0.40614 * sind(MP) + 0.17302 * E * sind(M) + 0.01614 * sind(2 * MP) + 0.01043 * sind(2 * F) + 0.00734 * E * sind(MP - M) - 0.00515 * E * sind(MP + M) + 0.00209 * E * E * sind(2 * M) - 0.00111 * sind(MP - 2 * F) - 0.00057 * sind(MP + 2 * F) + 0.00056 * E * sind(2 * MP + M) - 0.00042 * sind(3 * MP) + 0.00042 * E * sind(M + 2 * F) + 0.00038 * E * sind(M - 2 * F) - 0.00024 * E * sind(2 * MP - M) - 0.00017 * sind(Omega) - 0.00007 * sind(MP + 2 * M);\n\n//   quarters[2] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   // Last Quarter k=k+0.75\n//   JDE = JDE0 + 29.530588853 * 0.75;\n//   // Already added 0.5 for full moon\n//   M = rev(M + 29.10535669 * 0.25);\n//   MP = rev(MP + 385.81693528 * 0.25);\n//   F = rev(F + 390.67050274 * 0.25);\n//   Omega = rev(Omega - 1.56375580 * 0.25);\n//   A[1] = rev(A[1] + 0.107408 * 0.25);\n//   A[2] = rev(A[2] + 0.016321 * 0.25);\n//   A[3] = rev(A[3] + 26.651886 * 0.25);\n//   A[4] = rev(A[4] + 36.412478 * 0.25);\n//   A[5] = rev(A[5] + 18.206239 * 0.25);\n//   A[6] = rev(A[6] + 53.303771 * 0.25);\n//   A[7] = rev(A[7] + 2.453732 * 0.25);\n\n//   JDE = JDE - 0.62801 * sind(MP) + 0.17172 * E * sind(M) - 0.01183 * E * sind(MP + M) + 0.00862 * sind(2 * MP) + 0.00804 * sind(2 * F) + 0.00454 * E * sind(MP - M) + 0.00204 * E * E * sind(2 * M) - 0.00180 * sind(MP - 2 * F) - 0.00070 * sind(MP + 2 * F) - 0.00040 * sind(3 * MP) - 0.00034 * E * sind(2 * MP - M) + 0.00032 * E * sind(M + 2 * F) + 0.00032 * E * sind(M - 2 * F) - 0.00028 * E * E * sind(MP + 2 * M) + 0.00027 * E * sind(2 * MP + M) - 0.00017 * sind(Omega);\n//   // Next term is w add for first quarter & subtract for second\n//   JDE = JDE - (0.00306 - 0.00038 * E * cosd(M) + 0.00026 * cosd(MP) - 0.00002 * cosd(MP - M) + 0.00002 * cosd(MP + M) + 0.00002 * cosd(2 * F));\n\n//   quarters[3] = JDE + 0.000325 * sind(A[1]) + 0.000165 * sind(A[2]) + 0.000164 * sind(A[3]) + 0.000126 * sind(A[4]) + 0.000110 * sind(A[5]) + 0.000062 * sind(A[6]) + 0.000060 * sind(A[7]);\n\n//   return quarters;\n// }\n\nmodule.exports = Moon;","\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar Sun = require(\"./sun.js\");\nvar Moon = require(\"./moon.js\");\n\nvar degreesBelowHorizon = {\n  sunrise: 0.833,\n  sunriseEnd: 0.3,\n  twilight: 6,\n  nauticalTwilight: 12,\n  night: 18,\n  goldenHour: -6\n};\n\nvar SolarCalc = (function () {\n  function SolarCalc(date, latitude, longitude) {\n    _classCallCheck(this, SolarCalc);\n\n    this.date = date;\n    this.lat = latitude;\n    this.longitude = longitude;\n\n    this.sun = new Sun(date, latitude, longitude);\n    this.moon = new Moon(date, latitude, longitude);\n  }\n\n  _createClass(SolarCalc, {\n    solarNoon: {\n      get: function () {\n        return this.sun.solarNoon;\n      }\n    },\n    sunrise: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.sunrise, true);\n      }\n    },\n    sunset: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.sunrise);\n      }\n    },\n    sunriseEnd: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.sunriseEnd, true);\n      }\n    },\n    sunsetStart: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.sunriseEnd, false);\n      }\n    },\n    civilDawn: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.twilight, true);\n      }\n    },\n    dawn: {\n      get: function () {\n        return this.civilDawn;\n      }\n    },\n    civilDusk: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.twilight, false);\n      }\n    },\n    dusk: {\n      get: function () {\n        return this.civilDusk;\n      }\n    },\n    nauticalDawn: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.nauticalTwilight, true);\n      }\n    },\n    nauticalDusk: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.nauticalTwilight, false);\n      }\n    },\n    nightStart: {\n      get: function () {\n        return this.astronomicalDusk;\n      }\n    },\n    astronomicalDusk: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.night, false);\n      }\n    },\n    astronomicalDawn: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.night, true);\n      }\n    },\n    nightEnd: {\n      get: function () {\n        return this.astronomicalDawn;\n      }\n    },\n    goldenHourStart: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.goldenHour, false);\n      }\n    },\n    goldenHourEnd: {\n      get: function () {\n        return this.sun.timeAtAngle(degreesBelowHorizon.goldenHour, true);\n      }\n    },\n    lunarDistance: {\n      get: function () {\n        return this.moon.distance;\n      }\n    },\n    lunarIlluminosity: {\n      get: function () {\n        return this.moon.illuminosity;\n      }\n    }\n  });\n\n  return SolarCalc;\n})();\n\nmodule.exports = SolarCalc;","\"use strict\";\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var key in props) { var prop = props[key]; prop.configurable = true; if (prop.value) prop.writable = true; } Object.defineProperties(target, props); } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _classCallCheck = function (instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } };\n\nvar Sun = (function () {\n  function Sun(date, latitude, longitude) {\n    _classCallCheck(this, Sun);\n\n    this.date = date;\n    this.latitude = latitude;\n    this.longitude = longitude;\n\n    this.julianDate = getJD(date);\n  }\n\n  _createClass(Sun, {\n    solarNoon: {\n      get: function () {\n        return calcSolNoon(this.julianDate, this.longitude, this.date);\n      }\n    },\n    timeAtAngle: {\n      value: function timeAtAngle(angle, rising) {\n        return calcSunriseSet(rising, angle, this.julianDate, this.date, this.latitude, this.longitude);\n      }\n    }\n  });\n\n  return Sun;\n})();\n\nvar formatDate = function formatDate(date, minutes) {\n  var seconds = (minutes - Math.floor(minutes)) * 60;\n  return new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), 0, minutes, seconds));\n};\n\nfunction calcTimeJulianCent(jd) {\n  var T = (jd - 2451545) / 36525;\n  return T;\n}\n\nfunction isLeapYear(yr) {\n  return yr % 4 === 0 && yr % 100 !== 0 || yr % 400 === 0;\n}\n\nfunction calcDoyFromJD(jd) {\n  var z = Math.floor(jd + 0.5);\n  var f = jd + 0.5 - z;\n  var A;\n  if (z < 2299161) {\n    A = z;\n  } else {\n    var alpha = Math.floor((z - 1867216.25) / 36524.25);\n    A = z + 1 + alpha - Math.floor(alpha / 4);\n  }\n  var B = A + 1524;\n  var C = Math.floor((B - 122.1) / 365.25);\n  var D = Math.floor(365.25 * C);\n  var E = Math.floor((B - D) / 30.6001);\n  var day = B - D - Math.floor(30.6001 * E) + f;\n  var month = E < 14 ? E - 1 : E - 13;\n  var year = month > 2 ? C - 4716 : C - 4715;\n\n  var k = isLeapYear(year) ? 1 : 2;\n  var doy = Math.floor(275 * month / 9) - k * Math.floor((month + 9) / 12) + day - 30;\n  return doy;\n}\n\nfunction radToDeg(angleRad) {\n  return 180 * angleRad / Math.PI;\n}\n\nfunction degToRad(angleDeg) {\n  return Math.PI * angleDeg / 180;\n}\n\nfunction calcGeomMeanLongSun(t) {\n  var L0 = 280.46646 + t * (36000.76983 + t * 0.0003032);\n  while (L0 > 360) {\n    L0 -= 360;\n  }\n  while (L0 < 0) {\n    L0 += 360;\n  }\n  return L0; // in degrees\n}\n\nfunction calcGeomMeanAnomalySun(t) {\n  var M = 357.52911 + t * (35999.05029 - 0.0001537 * t);\n  return M; // in degrees\n}\n\nfunction calcEccentricityEarthOrbit(t) {\n  var e = 0.016708634 - t * (0.000042037 + 1.267e-7 * t);\n  return e; // unitless\n}\n\nfunction calcSunEqOfCenter(t) {\n  var m = calcGeomMeanAnomalySun(t);\n  var mrad = degToRad(m);\n  var sinm = Math.sin(mrad);\n  var sin2m = Math.sin(mrad + mrad);\n  var sin3m = Math.sin(mrad + mrad + mrad);\n  var C = sinm * (1.914602 - t * (0.004817 + 0.000014 * t)) + sin2m * (0.019993 - 0.000101 * t) + sin3m * 0.000289;\n  return C; // in degrees\n}\n\nfunction calcSunTrueLong(t) {\n  var l0 = calcGeomMeanLongSun(t);\n  var c = calcSunEqOfCenter(t);\n  var O = l0 + c;\n  return O; // in degrees\n}\n\nfunction calcSunApparentLong(t) {\n  var o = calcSunTrueLong(t);\n  var omega = 125.04 - 1934.136 * t;\n  var lambda = o - 0.00569 - 0.00478 * Math.sin(degToRad(omega));\n  return lambda; // in degrees\n}\n\nfunction calcMeanObliquityOfEcliptic(t) {\n  var seconds = 21.448 - t * (46.815 + t * (0.00059 - t * 0.001813));\n  var e0 = 23 + (26 + seconds / 60) / 60;\n  return e0; // in degrees\n}\n\nfunction calcObliquityCorrection(t) {\n  var e0 = calcMeanObliquityOfEcliptic(t);\n  var omega = 125.04 - 1934.136 * t;\n  var e = e0 + 0.00256 * Math.cos(degToRad(omega));\n  return e; // in degrees\n}\n\nfunction calcSunDeclination(t) {\n  var e = calcObliquityCorrection(t);\n  var lambda = calcSunApparentLong(t);\n\n  var sint = Math.sin(degToRad(e)) * Math.sin(degToRad(lambda));\n  var theta = radToDeg(Math.asin(sint));\n  return theta; // in degrees\n}\n\nfunction calcEquationOfTime(t) {\n  var epsilon = calcObliquityCorrection(t);\n  var l0 = calcGeomMeanLongSun(t);\n  var e = calcEccentricityEarthOrbit(t);\n  var m = calcGeomMeanAnomalySun(t);\n\n  var y = Math.tan(degToRad(epsilon) / 2);\n  y *= y;\n\n  var sin2l0 = Math.sin(2 * degToRad(l0));\n  var sinm = Math.sin(degToRad(m));\n  var cos2l0 = Math.cos(2 * degToRad(l0));\n  var sin4l0 = Math.sin(4 * degToRad(l0));\n  var sin2m = Math.sin(2 * degToRad(m));\n\n  var Etime = y * sin2l0 - 2 * e * sinm + 4 * e * y * sinm * cos2l0 - 0.5 * y * y * sin4l0 - 1.25 * e * e * sin2m;\n  return radToDeg(Etime) * 4; // in minutes of time\n}\n\nfunction calcHourAngle(angle, lat, solarDec) {\n  var latRad = degToRad(lat);\n  var sdRad = degToRad(solarDec);\n  var HAarg = Math.cos(degToRad(90 + angle)) / (Math.cos(latRad) * Math.cos(sdRad)) - Math.tan(latRad) * Math.tan(sdRad);\n  var HA = Math.acos(HAarg);\n  return HA; // in radians (for sunset, use -HA)\n}\n\nfunction isNumber(inputVal) {\n  var oneDecimal = false;\n  var inputStr = \"\" + inputVal;\n  for (var i = 0; i < inputStr.length; i++) {\n    var oneChar = inputStr.charAt(i);\n    if (i === 0 && (oneChar === \"-\" || oneChar === \"+\")) {\n      continue;\n    }\n    if (oneChar === \".\" && !oneDecimal) {\n      oneDecimal = true;\n      continue;\n    }\n    if (oneChar < \"0\" || oneChar > \"9\") {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction getJD(date) {\n  var year = date.getFullYear();\n  var month = date.getMonth() + 1;\n  var day = date.getDate();\n\n  var A = Math.floor(year / 100);\n  var B = 2 - A + Math.floor(A / 4);\n  var JD = Math.floor(365.25 * (year + 4716)) + Math.floor(30.6001 * (month + 1)) + day + B - 1524.5;\n  return JD;\n}\n\nfunction calcSolNoon(jd, longitude, date) {\n  var tnoon = calcTimeJulianCent(jd - longitude / 360);\n  var eqTime = calcEquationOfTime(tnoon);\n  var solNoonOffset = 720 - longitude * 4 - eqTime; // in minutes\n  var newt = calcTimeJulianCent(jd + solNoonOffset / 1440);\n  eqTime = calcEquationOfTime(newt);\n  var solNoonLocal = 720 - longitude * 4 - eqTime; // in minutes\n  while (solNoonLocal < 0) {\n    solNoonLocal += 1440;\n  }\n  while (solNoonLocal >= 1440) {\n    solNoonLocal -= 1440;\n  }\n  return formatDate(date, solNoonLocal);\n  // return timeString(solNoonLocal, 3);\n}\n\nfunction dayString(jd) {\n  if (jd < 900000 || jd > 2817000) {\n    return \"error\";\n  } else {\n    var z = Math.floor(jd + 0.5);\n    var f = jd + 0.5 - z;\n    var A;\n    if (z < 2299161) {\n      A = z;\n    } else {\n      var alpha = Math.floor((z - 1867216.25) / 36524.25);\n      A = z + 1 + alpha - Math.floor(alpha / 4);\n    }\n    var B = A + 1524;\n    var C = Math.floor((B - 122.1) / 365.25);\n    var D = Math.floor(365.25 * C);\n    var E = Math.floor((B - D) / 30.6001);\n    var day = B - D - Math.floor(30.6001 * E) + f;\n    var month = E < 14 ? E - 1 : E - 13;\n    var year = month > 2 ? C - 4716 : C - 4715;\n    return new Date(Date.UTC(year, month - 1, day, 0, 0, 0));\n  }\n}\n\nfunction calcSunriseSetUTC(rise, angle, JD, latitude, longitude) {\n  var t = calcTimeJulianCent(JD);\n  var eqTime = calcEquationOfTime(t);\n  var solarDec = calcSunDeclination(t);\n  var hourAngle = calcHourAngle(angle, latitude, solarDec);\n  //alert(\"HA = \" + radToDeg(hourAngle));\n  if (!rise) hourAngle = -hourAngle;\n  var delta = longitude + radToDeg(hourAngle);\n  var timeUTC = 720 - 4 * delta - eqTime; // in minutes\n  return timeUTC;\n}\n\nfunction calcSunriseSet(rise, angle, JD, date, latitude, longitude)\n// rise = 1 for sunrise, 0 for sunset\n{\n  var timeUTC = calcSunriseSetUTC(rise, angle, JD, latitude, longitude);\n  var newTimeUTC = calcSunriseSetUTC(rise, angle, JD + timeUTC / 1440, latitude, longitude);\n  if (isNumber(newTimeUTC)) {\n\n    return formatDate(date, newTimeUTC);\n  } else {\n    // no sunrise/set found\n    var doy = calcDoyFromJD(JD);\n    var jdy;\n    if (latitude > 66.4 && doy > 79 && doy < 267 || latitude < -66.4 && (doy < 83 || doy > 263)) {\n      //previous sunrise/next sunset\n      jdy = calcJDofNextPrevRiseSet(!rise, rise, angle, JD, latitude, longitude);\n      return dayString(jdy);\n    } else {\n      //previous sunset/next sunrise\n      jdy = calcJDofNextPrevRiseSet(rise, rise, angle, JD, latitude, longitude);\n      return dayString(jdy);\n    }\n  }\n}\n\nfunction calcJDofNextPrevRiseSet(next, rise, type, JD, latitude, longitude) {\n  var julianday = JD;\n  var increment = next ? 1 : -1;\n\n  var time = calcSunriseSetUTC(rise, type, julianday, latitude, longitude);\n  while (!isNumber(time)) {\n    julianday += increment;\n    time = calcSunriseSetUTC(rise, type, julianday, latitude, longitude);\n  }\n\n  return julianday;\n}\n\nmodule.exports = Sun;"],"names":["module","exports","_createClass","defineProperties","target","props","key","prop","configurable","value","writable","Object","Constructor","protoProps","staticProps","prototype","Moon","date","latitude","longitude","instance","TypeError","_classCallCheck","this","julianDate","getJD","illuminosity","get","T","T2","T3","T4","D","MP","M","rev","sind","moonPhase","distance","jd","LP","F","A1","A2","A3","E","E2","Sl","Sr","i","Eterm","Math","abs","T45AM","T45AL","T45AD","T45AMP","T45AF","T45AR","cosd","Sb","T45BM","T45BL","T45BD","T45BMP","T45BF","mglong","mglat","mr","round","obl","ra","y","angle","tan","PI","x","atan","dec","c","asin","moonPos","year","getFullYear","month","getMonth","day","getDate","A","floor","B","sin","cos","Sun","require","degreesBelowHorizon","SolarCalc","lat","sun","moon","solarNoon","sunrise","timeAtAngle","sunset","sunriseEnd","sunsetStart","civilDawn","dawn","civilDusk","dusk","nauticalDawn","nauticalDusk","nightStart","astronomicalDusk","astronomicalDawn","nightEnd","goldenHourStart","goldenHourEnd","lunarDistance","lunarIlluminosity","eqTime","calcEquationOfTime","calcTimeJulianCent","newt","solNoonLocal","formatDate","calcSolNoon","rising","rise","JD","timeUTC","calcSunriseSetUTC","newTimeUTC","isNumber","doy","z","f","alpha","C","k","yr","calcDoyFromJD","dayString","calcJDofNextPrevRiseSet","calcSunriseSet","minutes","seconds","Date","UTC","radToDeg","angleRad","degToRad","angleDeg","calcGeomMeanLongSun","t","L0","calcGeomMeanAnomalySun","calcSunTrueLong","l0","mrad","calcSunEqOfCenter","calcObliquityCorrection","e0","calcMeanObliquityOfEcliptic","omega","calcSunDeclination","e","lambda","calcSunApparentLong","sint","epsilon","calcEccentricityEarthOrbit","m","sin2l0","sinm","inputVal","oneDecimal","inputStr","length","oneChar","charAt","hourAngle","solarDec","latRad","sdRad","HAarg","acos","calcHourAngle","next","type","julianday","increment","time"],"sourceRoot":""}